# Cargar liberias y paquetes
#install.packages("haven") cual
#install.packages("plm")
#install.packages("skimr")
#install.packages("dplyr")
#install.packages("ggplot2")
#install.packages("modelsummary")
#install.packages("knitr")
#install.packages("tinytex")
#tinytex::install_tinytex()
library(knitr)
library(haven)
library(plm)
library(scales)
library(skimr)
library(dplyr)
library(ggplot2)
library(AER)
library(fixest)
library(lmtest)
library(sandwich)
library(tidyverse)
library(stargazer)
library(dplyr)
# Leer archivo .dta
data <- read_dta("data_endline_1and2.dta")
View(data)
library(survey)
install.packages("survey")
library(survey)
# Ver base
str(data)
# Definir diseño muestral (peso y cluster)
design <- svydesign(
id = ~areaid,          # cluster a nivel de área
weights = ~w1,         # peso endline 1
data = data
)
View(design)
# Columna 1: Préstamo de Spandana
m1 <- svyglm(
spandana_1 ~ treatment + area_debt_total_base,
design = design,
family = quasibinomial()
)
# Columna 3: Préstamo de cualquier MFI
m3 <- svyglm(
anymfi_1 ~ treatment + area_debt_total_base,
design = design,
family = quasibinomial()
)
# Mostrar coeficientes con 4 cifras significativas
coef_m1 <- signif(coef(m1)["treatment"], 4)
coef_m3 <- signif(coef(m3)["treatment"], 4)
cat("Col 1 (Spandana):", coef_m1, "\n")
cat("Col 3 (Any MFI):", coef_m3, "\n")
# Exportar resultados tipo tabla
stargazer(m1, m3, type = "text",
keep = "treatment",
covariate.labels = c("Treatment"),
dep.var.labels = c("Borrowed from Spandana",
"Borrowed from any MFI"),
digits = 4,
title = "Replication of Table 2, Panel A (Cols 1 & 3)")
# Exportar resultados tipo tabla
stargazer(m1, m3, type = "text",
keep = "treatment",
covariate.labels = c("Treatment"),
dep.var.labels = c("Spandana",
"MFI"),
digits = 4,
title = "TABLE 2-CREDIT")
# Filtrar muestra Endline 1
data1 <- subset(data, sample1 == 1)
View(data1)
# Variables dependientes: missing a 0
data1$spandana_1 <- ifelse(is.na(data1$spandana_1), 0, data1$spandana_1)
data1$anymfi_1   <- ifelse(is.na(data1$anymfi_1), 0, data1$anymfi_1)
# Diseño muestral con pesos y cluster
design1 <- svydesign(
id = ~areaid,
weights = ~w1,
data = data1
)
# Columna 1: préstamo Spandana
m1 <- svyglm(
spandana_1 ~ treat_dummy + area_debt_total_base,
design = design1,
family = quasibinomial()
)
# Diseño muestral con pesos y cluster
design1 <- svydesign(
id = ~areaid,
weights = ~w1,
data = data1
)
# Columna 1: préstamo Spandana
m1 <- svyglm(
spandana_1 ~ treatment + area_debt_total_base,
design = design1,
family = quasibinomial()
)
# Columna 3: préstamo cualquier MFI
m3 <- svyglm(
anymfi_1 ~ treatment + area_debt_total_base,
design = design1,
family = quasibinomial()
)
# Replicar la tabla2
stargazer(m1, m3, type = "text",
keep = "treatment",
covariate.labels = c("Treatment"),
dep.var.labels = c("Spandana",
"MFI"),
digits = 4,
title = "TABLE 2-CREDIT")
# Filtrar muestra Endline 1
data1 <- subset(data, sample1 == 1)
# Variables dependientes: missing a 0
data1$spandana_1 <- ifelse(is.na(data1$spandana_1), 0, data1$spandana_1)
data1$anymfi_1   <- ifelse(is.na(data1$anymfi_1), 0, data1$anymfi_1)
# Filtrar muestra Endline 1
data1 <- subset(data, sample1 == 1)
# Variables dependientes: missing a 0
data1$spandana_1 <- ifelse(is.na(data1$spandana_1), 0, data1$spandana_1)
data1$anymfi_1   <- ifelse(is.na(data1$anymfi_1), 0, data1$anymfi_1)
# Tratamiento binario
data1$treat_dummy <- ifelse(data1$treatment == "Treatment", 1, 0)
# Cargar liberias y paquetes
#install.packages("haven") cual
#install.packages("plm")
#install.packages("skimr")
#install.packages("dplyr")
#install.packages("ggplot2")
#install.packages("modelsummary")
#install.packages("knitr")
#install.packages("tinytex")
#tinytex::install_tinytex()
#install.packages("survey")
library(knitr)
library(haven)
library(plm)
library(scales)
library(skimr)
library(dplyr)
library(ggplot2)
library(AER)
library(fixest)
library(lmtest)
library(sandwich)
library(tidyverse)
library(stargazer)
library(dplyr)
library(survey)
# Leer archivo .dta
data <- read_dta("data_endline_1and2.dta")
# Ver base
str(data)
# Filtrar muestra Endline 1
data1 <- subset(data, sample1 == 1)
# Variables dependientes: missing a 0
data1$spandana_1 <- ifelse(is.na(data1$spandana_1), 0, data1$spandana_1)
data1$anymfi_1   <- ifelse(is.na(data1$anymfi_1), 0, data1$anymfi_1)
# Diseño muestral con pesos y cluster
design1 <- svydesign(
id = ~areaid,
weights = ~w1,
data = data1
)
# Columna 1: préstamo Spandana
m1 <- svyglm(
spandana_1 ~ treatment + area_debt_total_base,
design = design1,
family = quasibinomial()
)
# Columna 3: préstamo cualquier MFI
m3 <- svyglm(
anymfi_1 ~ treatment + area_debt_total_base,
design = design1,
family = quasibinomial()
)
# Replicar la tabla2
stargazer(m1, m3, type = "text",
keep = "treatment",
covariate.labels = c("Treatment"),
dep.var.labels = c("Spandana",
"MFI"),
digits = 4,
title = "TABLE 2-CREDIT")
# 2. Filtrar solo hogares de Endline 1
data1 <- subset(data, sample1 == 1)
# 3. Reemplazar NA por 0 en las variables dependientes
data1$spandana_1 <- ifelse(is.na(data1$spandana_1), 0, data1$spandana_1)
data1$anymfi_1   <- ifelse(is.na(data1$anymfi_1), 0, data1$anymfi_1)
# 4. Definir diseño muestral con pesos y clustering por área
design1 <- svydesign(
id = ~areaid,   # cluster nivel área
weights = ~w1,  # pesos endline 1
data = data1
)
# 5. Estimar modelos (probabilidad lineal)
m1 <- svyglm(
spandana_1 ~ treatment + area_debt_total_base,
design = design1,
family = gaussian()
)
m3 <- svyglm(
anymfi_1 ~ treatment + area_debt_total_base,
design = design1,
family = gaussian()
)
# 6. Mostrar tabla de resultados
stargazer(m1, m3, type = "text",
keep = "treatment",
covariate.labels = c("Treatment"),
dep.var.labels = c("Borrowed from Spandana",
"Borrowed from any MFI"),
digits = 4,
title = "Replication of Table 2, Panel A (Cols 1 & 3)")
# Cargar liberias y paquetes
#install.packages("haven") cual
#install.packages("plm")
#install.packages("skimr")
#install.packages("dplyr")
#install.packages("ggplot2")
#install.packages("modelsummary")
#install.packages("knitr")
#install.packages("tinytex")
#tinytex::install_tinytex()
#install.packages("survey")
library(knitr)
library(haven)
library(plm)
library(scales)
library(skimr)
library(dplyr)
library(ggplot2)
library(AER)
library(fixest)
library(lmtest)
library(sandwich)
library(tidyverse)
library(stargazer)
library(dplyr)
library(survey)
# Leer archivo .dta
data <- read_dta("data_endline_1and2.dta")
# Ver base
str(data)
# Filtrar solo hogares de Endline 1
data1 <- subset(data, sample1 == 1)
# Reemplazar NA por 0
data1$spandana_1 <- ifelse(is.na(data1$spandana_1), 0, data1$spandana_1)
data1$anymfi_1   <- ifelse(is.na(data1$anymfi_1), 0, data1$anymfi_1)
# Definir diseño muestral con pesos y clustering por área
design1 <- svydesign(
id = ~areaid,   # cluster nivel área
weights = ~w1,  # pesos
data = data1
)
# 5. Estimar modelos (probabilidad lineal)
m1 <- svyglm(
spandana_1 ~ treatment + area_debt_total_base,
design = design1,
family = gaussian()
)
m3 <- svyglm(
anymfi_1 ~ treatment + area_debt_total_base,
design = design1,
family = gaussian()
)
# 6. Mostrar tabla de resultados
stargazer(m1, m3, type = "text",
keep = "treatment",
covariate.labels = c("Treatment"),
dep.var.labels = c("Spandana",
"MFI"),
digits = 4,
title = "Replicar Tabla 2- Credit")
# Usar Endline 1
data1 <- subset(data, sample1 == 1)
# Reemplazar NA por 0 en variables dependientes
data1$bizassets_1     <- ifelse(is.na(data1$bizassets_1), 0, data1$bizassets_1)
data1$bizinvestment_1 <- ifelse(is.na(data1$bizinvestment_1), 0, data1$bizinvestment_1)
# Col 3: Activos de negocio
m3 <- svyglm(
bizassets_1 ~ treatment + area_debt_total_base,
design = design1,
family = gaussian()
)
# Col 4: Inversión en negocio
m4 <- svyglm(
bizinvestment_1 ~ treatment + area_debt_total_base,
design = design1,
family = gaussian()
)
# Tabla
library(stargazer)
stargazer(m3, m4, type = "text",
keep = "treatment",
covariate.labels = c("Treatment"),
dep.var.labels = c("Business assets (Endline 1)",
"Business investment (Endline 1)"),
digits = 4,
title = "Replication of Table 3, Panel A (Cols 3 & 4)")
# 2. Filtrar Endline 1
data1 <- subset(data, sample1 == 1)
# 3. Reemplazar NAs por 0 en variables dependientes
data1$bizassets_1     <- ifelse(is.na(data1$bizassets_1), 0, data1$bizassets_1)
data1$bizinvestment_1 <- ifelse(is.na(data1$bizinvestment_1), 0, data1$bizinvestment_1)
# 4. Reemplazar NAs en la variable de control por 0 (para no perder obs.)
data1$area_debt_total_base <- ifelse(is.na(data1$area_debt_total_base), 0, data1$area_debt_total_base)
# 5. Verificar número de observaciones
nrow(data1)  # debería dar 6863
# 7. Modelos: columnas 3 y 4
m3 <- svyglm(
bizassets_1 ~ treatment + area_debt_total_base,
design = design1,
family = gaussian()
)
m4 <- svyglm(
bizinvestment_1 ~ treatment + area_debt_total_base,
design = design1,
family = gaussian()
)
# 8. Tabla estilo paper
stargazer(m3, m4, type = "text",
keep = "treatment",
covariate.labels = c("Treatment"),
dep.var.labels = c("Business assets (Endline 1)",
"Business investment (Endline 1)"),
digits = 4,
title = "Replication of Table 3, Panel A (Cols 3 & 4)")
library(survey)
library(stargazer)
# Filtrar muestra Endline 1
data1 <- subset(data, sample1 == 1)
# Reemplazar NA en variables dependientes con 0
data1$bizassets_1     <- ifelse(is.na(data1$bizassets_1), 0, data1$bizassets_1)
data1$bizinvestment_1 <- ifelse(is.na(data1$bizinvestment_1), 0, data1$bizinvestment_1)
# Reemplazar NA en covariable de control (para no perder observaciones)
data1$area_debt_total_base <- ifelse(is.na(data1$area_debt_total_base), 0, data1$area_debt_total_base)
# Columna 3: Business assets
m3 <- svyglm(
bizassets_1 ~ treatment + area_debt_total_base,
design = design1
)
# Columna 4: Business investment
m4 <- svyglm(
bizinvestment_1 ~ treatment + area_debt_total_base,
design = design1
)
# Tabla final
stargazer(m3, m4, type = "text",
keep = "treatment",
covariate.labels = c("Treatment"),
dep.var.labels = c("Business assets (Endline 1)",
"Business investment (Endline 1)"),
digits = 4,
title = "TABLE 3 - BUSINESS (Panel A)")
# Ver base
str(data)
treated <- data$treatment== 1  # selecciona solo las áreas tratadas
# compliance rate ajustada por pesos
compliance_rate <- sum(data$anymfi_1[treatment] * data$weight[treatment]) /
sum(data$weight[treatment])
treated <- data$treatment== 1  # selecciona solo las áreas tratadas
# compliance rate ajustada por pesos
compliance_rate <- sum(data$anymfi_1[treated] * data$w1[treated]) /
sum(data$w1[treated])
compliance_rate
knitr::opts_chunk$set(echo = TRUE)
#install.packages("haven") cual
#install.packages("plm")
#install.packages("skimr")
#install.packages("dplyr")
#install.packages("ggplot2")
#install.packages("modelsummary")
#install.packages("knitr")
#install.packages("tinytex")
#tinytex::install_tinytex()
#install.packages("survey")
library(knitr)
library(haven)
#install.packages("haven") cual
#install.packages("plm")
#install.packages("skimr")
#install.packages("dplyr")
#install.packages("ggplot2")
#install.packages("modelsummary")
#install.packages("knitr")
#install.packages("tinytex")
#tinytex::install_tinytex()
#install.packages("survey")
library(knitr)
library(haven)
library(plm)
#install.packages("haven") cual
#install.packages("plm")
#install.packages("skimr")
#install.packages("dplyr")
#install.packages("ggplot2")
#install.packages("modelsummary")
#install.packages("knitr")
#install.packages("tinytex")
#tinytex::install_tinytex()
#install.packages("survey")
library(knitr)
library(haven)
library(plm)
library(scales)
library(skimr)
library(dplyr)
library(ggplot2)
library(fixest)
library(sandwich)
library(sandwich)
library(tidyverse)
library(sandwich)
library(tidyverse)
library(stargazer)
library(survey)
#install.packages("haven") cual
#install.packages("plm")
#install.packages("skimr")
#install.packages("dplyr")
#install.packages("ggplot2")
#install.packages("modelsummary")
#install.packages("knitr")
#install.packages("tinytex")
#tinytex::install_tinytex()
install.packages("survey")
# Leer archivo .dta
data <- read_dta("data_endline_1and2.dta")
getwd()
list.files(getwd())
# Leer archivo .dta
data <- read_dta("data_endline_1and2.dta")
setwd("C:/Users/mc-c2/OneDrive - Universidad de los andes/Universidad/MECA/Big Data y Machine Learning/Repositorios/BD_ML_taller_1/Taller-3-ExperimentoAleatorio")
# Leer archivo .dta
data <- read_dta("data_endline_1and2.dta")
library(haven)
# Leer archivo .dta
data <- read_dta("data_endline_1and2.dta")
data <- read_dta("C:/Users/mc-c2/OneDrive - Universidad de los andes/Universidad/MECA/Big Data y Machine Learning/Repositorios/BD_ML_taller_1/Taller-3-ExperimentoAleatorio/data_endline_1and2.dta)
# Ver base
str(data)
# Revisar NA de la base
colSums(is.na(data))
