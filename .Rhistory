# Usar Endline 1
data1 <- subset(data, sample1 == 1)
# Reemplazar NA por 0 en variables dependientes
data1$bizassets_1     <- ifelse(is.na(data1$bizassets_1), 0, data1$bizassets_1)
data1$bizinvestment_1 <- ifelse(is.na(data1$bizinvestment_1), 0, data1$bizinvestment_1)
# Col 3: Activos de negocio
m3 <- svyglm(
bizassets_1 ~ treatment + area_debt_total_base,
design = design1,
family = gaussian()
)
# Col 4: Inversión en negocio
m4 <- svyglm(
bizinvestment_1 ~ treatment + area_debt_total_base,
design = design1,
family = gaussian()
)
# Tabla
library(stargazer)
stargazer(m3, m4, type = "text",
keep = "treatment",
covariate.labels = c("Treatment"),
dep.var.labels = c("Business assets (Endline 1)",
"Business investment (Endline 1)"),
digits = 4,
title = "Replication of Table 3, Panel A (Cols 3 & 4)")
# 2. Filtrar Endline 1
data1 <- subset(data, sample1 == 1)
# 3. Reemplazar NAs por 0 en variables dependientes
data1$bizassets_1     <- ifelse(is.na(data1$bizassets_1), 0, data1$bizassets_1)
data1$bizinvestment_1 <- ifelse(is.na(data1$bizinvestment_1), 0, data1$bizinvestment_1)
# 4. Reemplazar NAs en la variable de control por 0 (para no perder obs.)
data1$area_debt_total_base <- ifelse(is.na(data1$area_debt_total_base), 0, data1$area_debt_total_base)
# 5. Verificar número de observaciones
nrow(data1)  # debería dar 6863
# 7. Modelos: columnas 3 y 4
m3 <- svyglm(
bizassets_1 ~ treatment + area_debt_total_base,
design = design1,
family = gaussian()
)
m4 <- svyglm(
bizinvestment_1 ~ treatment + area_debt_total_base,
design = design1,
family = gaussian()
)
# 8. Tabla estilo paper
stargazer(m3, m4, type = "text",
keep = "treatment",
covariate.labels = c("Treatment"),
dep.var.labels = c("Business assets (Endline 1)",
"Business investment (Endline 1)"),
digits = 4,
title = "Replication of Table 3, Panel A (Cols 3 & 4)")
library(survey)
library(stargazer)
# Filtrar muestra Endline 1
data1 <- subset(data, sample1 == 1)
# Reemplazar NA en variables dependientes con 0
data1$bizassets_1     <- ifelse(is.na(data1$bizassets_1), 0, data1$bizassets_1)
data1$bizinvestment_1 <- ifelse(is.na(data1$bizinvestment_1), 0, data1$bizinvestment_1)
# Reemplazar NA en covariable de control (para no perder observaciones)
data1$area_debt_total_base <- ifelse(is.na(data1$area_debt_total_base), 0, data1$area_debt_total_base)
# Columna 3: Business assets
m3 <- svyglm(
bizassets_1 ~ treatment + area_debt_total_base,
design = design1
)
# Columna 4: Business investment
m4 <- svyglm(
bizinvestment_1 ~ treatment + area_debt_total_base,
design = design1
)
# Tabla final
stargazer(m3, m4, type = "text",
keep = "treatment",
covariate.labels = c("Treatment"),
dep.var.labels = c("Business assets (Endline 1)",
"Business investment (Endline 1)"),
digits = 4,
title = "TABLE 3 - BUSINESS (Panel A)")
# Ver base
str(data)
treated <- data$treatment== 1  # selecciona solo las áreas tratadas
# compliance rate ajustada por pesos
compliance_rate <- sum(data$anymfi_1[treatment] * data$weight[treatment]) /
sum(data$weight[treatment])
treated <- data$treatment== 1  # selecciona solo las áreas tratadas
# compliance rate ajustada por pesos
compliance_rate <- sum(data$anymfi_1[treated] * data$w1[treated]) /
sum(data$w1[treated])
compliance_rate
knitr::opts_chunk$set(echo = TRUE)
#install.packages("haven") cual
#install.packages("plm")
#install.packages("skimr")
#install.packages("dplyr")
#install.packages("ggplot2")
#install.packages("modelsummary")
#install.packages("knitr")
#install.packages("tinytex")
#tinytex::install_tinytex()
#install.packages("survey")
library(knitr)
library(haven)
#install.packages("haven") cual
#install.packages("plm")
#install.packages("skimr")
#install.packages("dplyr")
#install.packages("ggplot2")
#install.packages("modelsummary")
#install.packages("knitr")
#install.packages("tinytex")
#tinytex::install_tinytex()
#install.packages("survey")
library(knitr)
library(haven)
library(plm)
#install.packages("haven") cual
#install.packages("plm")
#install.packages("skimr")
#install.packages("dplyr")
#install.packages("ggplot2")
#install.packages("modelsummary")
#install.packages("knitr")
#install.packages("tinytex")
#tinytex::install_tinytex()
#install.packages("survey")
library(knitr)
library(haven)
library(plm)
library(scales)
library(skimr)
library(dplyr)
library(ggplot2)
library(fixest)
library(sandwich)
library(sandwich)
library(tidyverse)
library(sandwich)
library(tidyverse)
library(stargazer)
library(survey)
#install.packages("haven") cual
#install.packages("plm")
#install.packages("skimr")
#install.packages("dplyr")
#install.packages("ggplot2")
#install.packages("modelsummary")
#install.packages("knitr")
#install.packages("tinytex")
#tinytex::install_tinytex()
install.packages("survey")
# Leer archivo .dta
data <- read_dta("data_endline_1and2.dta")
getwd()
list.files(getwd())
# Leer archivo .dta
data <- read_dta("data_endline_1and2.dta")
setwd("C:/Users/mc-c2/OneDrive - Universidad de los andes/Universidad/MECA/Big Data y Machine Learning/Repositorios/BD_ML_taller_1/Taller-3-ExperimentoAleatorio")
# Leer archivo .dta
data <- read_dta("data_endline_1and2.dta")
library(haven)
# Leer archivo .dta
data <- read_dta("data_endline_1and2.dta")
data <- read_dta("C:/Users/mc-c2/OneDrive - Universidad de los andes/Universidad/MECA/Big Data y Machine Learning/Repositorios/BD_ML_taller_1/Taller-3-ExperimentoAleatorio/data_endline_1and2.dta)
# Ver base
str(data)
# Revisar NA de la base
colSums(is.na(data))
knitr::opts_chunk$set(echo = TRUE)
#install.packages("haven") cual
#install.packages("plm")
#install.packages("skimr")
#install.packages("dplyr")
#install.packages("ggplot2")
#install.packages("modelsummary")
#install.packages("knitr")
#install.packages("tinytex")
#tinytex::install_tinytex()
#install.packages("survey")
library(knitr)
library(plm)
library(scales)
library(skimr)
library(dplyr)
library(AER)
library(AER)
library(fixest)
library(lmtest)
library(sandwich)
library(tidyverse)
library(tidyverse)
library(stargazer)
library(dplyr)
# Leer archivo .dta
data <- read_dta("data_endline_1and2.dta")
library(haven)
# Leer archivo .dta
data <- read_dta("data_endline_1and2.dta")
getwd()
list.files()
knitr::opts_knit$set(root.dir = getwd())
# Leer archivo .dta
data <- read_dta("data_endline_1and2.dta")
setwd("C:/Users/mc-c2/OneDrive - Universidad de los andes/Universidad/MECA/Big Data y Machine Learning/Repositorios/BD_ML_taller_1/Taller-3-ExperimentoAleatorio")
# Leer archivo .dta
data <- read_dta("data_endline_1and2.dta")
getwd(9)
getwd()
knitr::opts_knit$get("root.dir")
setwd(C:/Users/mc-c2/OneDrive - Universidad de los andes/Universidad/MECA/Big Data y Machine Learning/Repositorios/BD_ML_taller_1/Taller-3-ExperimentoAleatorio)
setwd("C:/Users/mc-c2/OneDrive - Universidad de los andes/Universidad/MECA/Big Data y Machine Learning/Repositorios/BD_ML_taller_1/Taller-3-ExperimentoAleatorio")
getwd()
data <- read_dta("data_endline_1and2.dta")
# Leer archivo .dta
data <- read_dta("data_endline_1and2.dta")
# Ver base
str(data)
# Revisar NA de la base
colSums(is.na(data))
# Eliminar NA
data_inicial <- data %>% filter(!is.na(spandana_1))
# Filtrar solo hogares de Endline 1
data_inicial <- subset(data_inicial, sample1 == 1)
# Definir diseño muestral con pesos y clustering por área
design1 <- svydesign(
id = ~areaid,
weights = ~w1,
data = data_inicial
)
#install.packages("haven") cual
#install.packages("plm")
#install.packages("skimr")
#install.packages("dplyr")
#install.packages("ggplot2")
#install.packages("modelsummary")
#install.packages("knitr")
#install.packages("tinytex")
#tinytex::install_tinytex()
install.packages("survey")
install.packages("survey")
# Definir diseño muestral con pesos y clustering por área
design1 <- svydesign(
id = ~areaid,
weights = ~w1,
data = data_inicial
)
# 5. Regresiones
c1 <- svyglm(
spandana_1 ~ treatment + area_debt_total_base + area_pop_base + area_business_total_base + area_exp_pc_mean_base + area_literate_head_base + area_literate_base,
design = design1,
family = gaussian()
)
library(dplyr)
library(survey)
# Definir diseño muestral con pesos y clustering por área
design1 <- svydesign(
id = ~areaid,
weights = ~w1,
data = data_inicial
)
# Regresiones
spandana <- svyglm(
spandana_1 ~ treatment + area_debt_total_base + area_pop_base + area_business_total_base + area_exp_pc_mean_base + area_literate_head_base + area_literate_base,
design = design1,
family = gaussian()
)
mfi <- svyglm(
anymfi_1 ~ treatment + area_debt_total_base + area_pop_base + area_business_total_base + area_exp_pc_mean_base + area_literate_head_base + area_literate_base,
design = design1,
family = gaussian()
)
# 6. Mostrar tabla de resultados
stargazer(spandana, mfi, type = "text",
keep = "treatment",
covariate.labels = c("Treatment"),
dep.var.labels = c("Spandana",
"Any MFI"),
digits = 4,
title = "Replicar Tabla 2- Credit")
# 6. Mostrar tabla de resultados
stargazer(spandana, mfi, type = "text",
keep = "treatment",
covariate.labels = c("Treatment"),
dep.var.labels = c("Spandana",
"Any MFI"),
digits = 4,
title = "Replicar Tabla 2- Credit")
# Eliminar NA
data_gasto <- data_inicial %>% filter(!is.na(bizexpense_1))
data_ganancia <- data_inicial %>% filter(!is.na(bizprofit_1))
# Revisar NA de la base
colSums(is.na(data_inicial))
# Definir diseño muestral con pesos y clustering por área en cada base
design2 <- svydesign(
id = ~ areaid,   # cluster nivel área
weights = ~ w1,  # pesos
data = data_gasto
)
design3 <- svydesign(
id = ~ areaid,   # cluster nivel área
weights = ~ w1,  # pesos
data = data_ganancia
)
# Columna 3
gasto <- svyglm(
bizexpense_1 ~ treatment + area_debt_total_base + area_pop_base + area_business_total_base + area_exp_pc_mean_base + area_literate_head_base + area_literate_base,
design = design2,
data = data_gasto
)
# Columna 4
ganancia <- svyglm(
bizprofit_1 ~ treatment + area_debt_total_base + area_pop_base + area_business_total_base + area_exp_pc_mean_base + area_literate_head_base + area_literate_base,
design = design3,
data = data_ganancia
)
# Tabla
stargazer(gasto, ganancia, type = "text",
keep = "treatment",
covariate.labels = c("Treatment"),
dep.var.labels = c("Expenses",
"Profit"),
digits = 4,
title = "TABLE 3 -(Panel A)")
# Revisar NA de la base
colSums(is.na(data))
# Eliminar NA
data_gasto <- data %>% filter(!is.na(bizexpense_1))
data_ganancia <- data %>% filter(!is.na(bizprofit_1))
# Definir diseño muestral con pesos y clustering por área en cada base
design2 <- svydesign(
id = ~ areaid,   # cluster nivel área
weights = ~ w1,  # pesos
data = data_gasto
)
design3 <- svydesign(
id = ~ areaid,   # cluster nivel área
weights = ~ w1,  # pesos
data = data_ganancia
)
# Columna 3
gasto <- svyglm(
bizexpense_1 ~ treatment + area_debt_total_base + area_pop_base + area_business_total_base + area_exp_pc_mean_base + area_literate_head_base + area_literate_base,
design = design2,
data = data_gasto
)
# Columna 4
ganancia <- svyglm(
bizprofit_1 ~ treatment + area_debt_total_base + area_pop_base + area_business_total_base + area_exp_pc_mean_base + area_literate_head_base + area_literate_base,
design = design3,
data = data_ganancia
)
# Tabla
stargazer(gasto, ganancia, type = "text",
keep = "treatment",
covariate.labels = c("Treatment"),
dep.var.labels = c("Expenses",
"Profit"),
digits = 4,
title = "TABLE 3 -(Panel A)")
# Tabla
stargazer(gasto, ganancia, type = "text",
keep = "treatment",
covariate.labels = c("Treatment"),
dep.var.labels = c("Expenses",
"Profit"),
digits = 2,
title = "TABLE 3 -(Panel A)")
# Tabla
stargazer(gasto, ganancia, type = "text",
keep = "treatment",
covariate.labels = c("Treatment"),
dep.var.labels = c("Expenses",
"Profit"),
digits = 0,
title = "TABLE 3 -(Panel A)")
# 6. Mostrar tabla de resultados
stargazer(spandana, mfi, type = "text",
keep = "treatment",
covariate.labels = c("Tratamiento"),
dep.var.labels = c("Spandana",
"Cualquier MFI"),
digits = 4,
title = "Tabla 2- Crédito")
# Tabla
stargazer(gasto, ganancia, type = "text",
keep = "treatment",
covariate.labels = c("Treatment"),
dep.var.labels = c("Gasto",
"Ganancias"),
digits = 0,
title = "TABLA 3 -(Panel A)")
# Eliminar NA
data_clean <- data %>% filter(!is.na(anymfi_1), !is.na(treatment), !is.na(w1))
# tasas de cumplimiento por grupo
comp_rates <- data_clean %>%
group_by(treatment) %>%
summarise(tasa_cumplimiento = weighted.mean(anymfi_1, w = w1, na.rm = TRUE))
# calcular la diferencia (first stage)
first_stage <- comp_rates$tasa_cumplimiento[comp_rates$treatment == 1] -
comp_rates$tasa_cumplimiento[comp_rates$treatment == 0]
p <- first_stage
# Eliminar NA
data_exp <- data %>% filter(!is.na(total_exp_mo_pc_1))
data_prof <- data %>% filter(!is.na(bizprofit_1))
# Intention-to-Treat (ITT) esto compara todos los municipios tratados vs. control.
itt1_consumo <- lm(total_exp_mo_pc_1 ~ treatment, data = data_exp, weights = w1)
itt2_profit  <- lm(bizprofit_1 ~ treatment, data = data_prof, weights = w1)
# Guardar coeficientes ITT
itt_consumo_hat <- coef(itt1_consumo)["treatment"]
itt_profit_hat  <- coef(itt2_profit)["treatment"]
# LATE (Local Average Treatment Effect) es el efecto promedio para los individuos cuyo estatus de tratamiento está determinado por el instrumento
late1_consumo <- ivreg(total_exp_mo_pc_1 ~ anymfi_1 | treatment, weights = w1, data = data_exp)
late2_profit <- ivreg(bizprofit_1 ~ anymfi_1 | treatment, weights = w1, data = data_prof)
# Guardar coeficientes LATE
late_consumo_iv <- coef(late1_consumo)["anymfi_1"]
late_profit_iv  <- coef(late2_profit)["anymfi_1"]
# Agrupar errores por barrio ITT
coeftest(itt1_consumo, vcov = vcovCL(itt1_consumo, cluster = ~ areaid))
coeftest(itt2_profit, vcov = vcovCL(itt2_profit, cluster = ~ areaid))
# Agrupar errores por barrio LATE
coeftest(late1_consumo, vcov = vcovCL(late1_consumo, cluster = ~ areaid))
coeftest(late2_profit, vcov = vcovCL(late2_profit, cluster = ~ areaid))
# Matrices para cluster
matriz_ITT1   <- vcovCL(itt1_consumo, cluster = ~ areaid)
matriz_ITT2   <- vcovCL(itt2_profit, cluster = ~ areaid)
matriz_LATE1   <- vcovCL(late1_consumo, cluster = ~ areaid)
# Errores estandar
se_itt_consumo   <- sqrt(diag(matriz_ITT1))
se_late_consumo   <- sqrt(diag(matriz_LATE1))
# Tabla
stargazer(itt1_consumo, itt2_profit,late1_consumo, late2_profit,
type = "text",
se = list(se_itt_consumo,se_itt_profit,se_late_consumo,se_late_profit),
column.labels = c("ITT consumo","ITT Utilidad",
"LATE consumo", "LATE Utilidad"),
title = "Impacto del microcrédito con errores agrupados por barrio")
se_itt_profit  <- sqrt(diag(matriz_ITT2))
# Tabla
stargazer(itt1_consumo, itt2_profit,late1_consumo, late2_profit,
type = "text",
se = list(se_itt_consumo,se_itt_profit,se_late_consumo,se_late_profit),
column.labels = c("ITT consumo","ITT Utilidad",
"LATE consumo", "LATE Utilidad"),
title = "Impacto del microcrédito con errores agrupados por barrio")
se_late_profit   <- sqrt(diag(matriz_LATE2))
matriz_LATE2  <- vcovCL(late2_profit, cluster = ~ areaid)
se_late_profit   <- sqrt(diag(matriz_LATE2))
# Tabla
stargazer(itt1_consumo, itt2_profit,late1_consumo, late2_profit,
type = "text",
se = list(se_itt_consumo,se_itt_profit,se_late_consumo,se_late_profit),
column.labels = c("ITT consumo","ITT Utilidad",
"LATE consumo", "LATE Utilidad"),
title = "Impacto del microcrédito con errores agrupados por barrio")
# Tabla
stargazer(itt1_consumo, itt2_profit,late1_consumo, late2_profit,
type = "text",
se = list(se_itt_consumo,se_itt_profit,se_late_consumo,se_late_profit),
covariate.labels = c("", "")),
# Tabla
stargazer(itt1_consumo, itt2_profit,late1_consumo, late2_profit,
type = "text",
se = list(se_itt_consumo,se_itt_profit,se_late_consumo,se_late_profit),
covariate.labels = c("", ""),
column.labels = c("ITT consumo","ITT Utilidad",
"LATE consumo", "LATE Utilidad"),
title = "Impacto del microcrédito con errores agrupados por barrio")
# Tabla
stargazer(itt1_consumo, itt2_profit,late1_consumo, late2_profit,
type = "text",
dep.var.labels.include = FALSE,
dep.var.labels = NULL,
se = list(se_itt_consumo,se_itt_profit,se_late_consumo,se_late_profit),
column.labels = c("ITT consumo","ITT Utilidad",
"LATE consumo", "LATE Utilidad"),
title = "Impacto del microcrédito con errores agrupados por barrio")
# LATE manual
late_consumo_manual <- itt_consumo_hat / p
late_profit_manual  <- itt_profit_hat  / p
# Tabla final
tabla_resultados <- data.frame(
Outcome = c("Consumo", "Profit"),
ITT = c(itt_consumo_hat, itt_profit_hat),
Tasa_cumplimiento = c(p, p),
LATE_manual = c(late_consumo_manual, late_profit_manual),
LATE_IV = c(late_consumo_iv, late_profit_iv)
)
tabla_resultados
# Tabla final
tabla_resultados <- data.frame(
Outcome = c("Consumo", "Utilidad"),
ITT = c(itt_consumo_hat, itt_profit_hat),
Tasa_cumplimiento = c(p, p),
LATE_manual = c(late_consumo_manual, late_profit_manual),
LATE_IV = c(late_consumo_iv, late_profit_iv)
)
knitr::opts_chunk$set(echo = TRUE)
\-readr:::check_path(path)
readr:::check_path(path)
# Leer archivo .dta
data <- read_dta("data_endline_1and2.dta")
knitr::opts_knit$set(root.dir = getwd())
# Leer archivo .dta
data <- read_dta("data_endline_1and2.dta")
getwd()
knitr::opts_knit$set(root.dir = "C:/Users/mc-c2/OneDrive - Universidad de los andes/Universidad/MECA/Big Data y Machine Learning/Repositorios/BD_ML_taller_1/Taller-3-ExperimentoAleatorio")
# Leer archivo .dta
data <- read_dta("data_endline_1and2.dta")
list.files(pattern = "Taller3_CamilaCaraballo_LauraRivera.pdf")
rmarkdown::render("Taller3_CamilaCaraballo_LauraRivera.Rmd")
